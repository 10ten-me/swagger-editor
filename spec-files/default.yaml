apiDeclarations:
  - apiVersion: 1
    swaggerVersion: 1.2
    basePath: http://localhost:8002/api
    description: Operations for Albums
    resourcePath: /albums
    produces:
      - application/json
      - application/xml
    consumes:
      - application/json
      - application/xml
    apis:
      - path: /users/{username}
        operations: 
            - method: GET
              summary: Get user by username.
              notes: Get a user by a username. This operation is allowed only to admins.
              type: User
              nickname: getUser
              parameters: 
                - name: username
                  description: The username of the user to retrieve.
                  required: true
                  type: string
                  paramType: path
              responseMessages: 
                - code: 404
                  message: User not found.
            - method: PUT
              summary: Updates a user.
              notes: This can only be done by an admin.
              type: void
              nickname: updateUser
              parameters: 
                - name: username
                  description: The username to operate on
                  required: true
                  type: string
                  paramType: path
                - name: body
                  description: Updated user object
                  required: true
                  type: InputUser
                  paramType: body
              responseMessages: 
                - code: 400
                  message: Insufficient fields (must have at least email and password). Username cannot be modified.
            - method: DELETE
              summary: Delete user
              notes: This can only be done by an admin.
              type: void
              nickname: deleteUser
              parameters: 
                - name: username
                  description: The username to operate on
                  required: true
                  type: string
                  paramType: path
              responseMessages: 
                - code: 404
                  message: User not found
    models:
      User:
        id: User
        required:
          - username
          - email
        properties:
          firstName:
            type: string
          username:
            type: string
          lastName:
            type: string
          email:
            type: string
          phone:
            type: string
          userStatus:
            type: integer
            format: int32
            description: User Status
            enum:
              - 1-registered
              - 2-active
              - 3-closed